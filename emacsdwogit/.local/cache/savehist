;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(TeX-command-history read-expression-history counsel-locate-history counsel-git-grep-history input-method-history org-link--history org-refile-history org-tags-history evil-ex-history org-read-date-history counsel-describe-symbol-history empty-history ivy-history minibuffer-history counsel-M-x-history evil-ex-search-history file-name-history))
(setq counsel-locate-history '(#("inb" 0 3 (ivy-index 0))))
(setq counsel-git-grep-history '(#("map!" 0 4 (ivy-index 9)) "docs/api.org:286:*** map!" #("map" 0 3 (ivy-index 5)) "docs/getting_started.org:1045:+ map!"))
(setq org-refile-history '("projects.org/self improvement/Thinking about myself/" "projects.org/self improvement/Thinking about myself/" #("projects.org/self improvement/Thinking about myself/" 0 52 (ivy-index 3 idx 154)) #("projects.org/working/Software engineering/Shell/" 0 48 (ivy-index 0 idx 89)) #("projects.org/materialistic/" 0 27 (ivy-index 0 idx 167)) "projects.org/self improvement/Processes/" #("projects.org/self improvement/Processes/" 0 40 (ivy-index 0 idx 150)) #("references.org/Books to read/" 0 29 (idx 33 ivy-index 0)) #("projects.org/leisure time/Relationship/" 0 39 (idx 160 ivy-index 6)) #("body" 0 4 (idx 116 ivy-index 0)) "someday.org/" "someday.org/" #("someday.org/" 0 12 (ivy-index 0))))
(setq org-tags-history '(#("project" 0 7 (ivy-index 0)) #("body" 0 4 (ivy-index 0)) #("sfe" 0 3 (ivy-index 0)) #("applications" 0 12 (ivy-index 0)) #("entrepreneur" 0 12 (ivy-index 0)) #("city" 0 4 (ivy-index 0)) #("leisure" 0 7 (ivy-index 0)) #("materialistic" 0 13 (ivy-index 0)) #("self-imporvement" 0 16 (ivy-index 0)) #("home" 0 4 (ivy-index 1)) #("del" 0 3 (ivy-index 0))))
(setq evil-ex-history '(#("w" 0 1 (ex-index 1)) #("vs references.org" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17)) #("w" 0 1 (ex-index 1)) #("vs" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("resize +4" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9)) #("vs" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wa" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("vs" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("wa" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("vs" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("vs" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wa" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("vs projects.org" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15)) #("q" 0 1 (ex-index 1)) #("vs projects" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11)) #("wa" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("vs" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("vs" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("vs inbox.org" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12)) #("w" 0 1 (ex-index 1)) #("`<,`>vs" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("vs" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("vs" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("v" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wqa" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("vs" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("wqa" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("vs" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("wqa" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("vs" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("wqa" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("vs" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("wqa" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("vs" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("wqa" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("vs" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("vs inbox.org" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12)) #("wqa" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("vs inbox.org" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12)) #("wqa" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("vs inbox.org" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12)) #("wqa" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("vs inbox.org" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12)) #("reg" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("vs" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("wqa" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("vs" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("vs inbox.org" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12)) #("wqa" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("vs" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("vs inbox.org" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12)) #("vs" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("vs notes.org" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12)) #("w" 0 1 (ex-index 1)) #("wa" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wa" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wa" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1))))
(setq org-read-date-history '("15:00+1    " "15:20+2    " "15:00+0:20    " "18:00-23:00    " "16:50+0:30    " "15:30+1:20    " "15:05+0:20    " "13:00+2    " "11:40+1    " "11:05+0:30    " "9:20-11:00    " "8:00+1:00    " "09:00    " "08:00    " "21:25+0:20    " "21:45+0:10    " "   " "20:15+0:30    " "14:45+0:30    " "14:25+15    " "14:10+0:10    " "13:45+0:20    " "13:45+0:5    " "23:12+1    " "5:00+3:32    " "12:00+2    " "16:00+4    " "15:23+1:34    " "12:00+2    " "14:00+2h    " "   " "12:00+5    " "12h-17h    " "15:00-17:00    "))
(setq counsel-describe-symbol-history '(#("org-arch" 0 8 (ivy-index 0)) "org-archive-location" #("+spe" 0 4 (ivy-index 1)) "+spell/correct" #("+spell" 0 6 (ivy-index 4)) "+spell/previous-error" #("which" 0 5 (ivy-index 0)) "which-key--current-prefix" #("org-sch" 0 7 (ivy-index 0)) "org-schedule"))
(setq ivy-history '(#("not" 0 3 (ivy-index 0)) "notes.org" #("pr" 0 2 (ivy-index 3)) "projects.org" "projects" #("ref" 0 3 (ivy-index 0)) "references.org" "projects.org" #("pro" 0 3 (ivy-index 3)) "projects.org" "projects.org" #("in" 0 2 (ivy-index 2)) "inbox.org" #("no " 0 3 (ivy-index 1)) "notes.org" "notes.org" "inbox.org" "inbox.org" #("sch" 0 3 (ivy-index 1)) "schedule.org" "schedule.org" "projects.org" #("org-agenda-sticky" 0 17 (ivy-index 0)) "projects.org" "references.org" "references.org" "schedule.org" "projects.org" "projects_test.org" "schedule.org" "inb" "projects.org" #("test." 0 5 (ivy-index 1)) #("test.org" 0 8 (ivy-index 0)) "test.org_archive" #("test" 0 4 (ivy-index 1)) "test.org_archive" "notes.org" #("add-to-list" 0 11 (ivy-index 0)) #("org-agenda-cmp-user-defined" 0 27 (ivy-index 0)) #("org-agenda-entry-types" 0 22 (ivy-index 4)) "projects.org" "inbox.org" #("map" 0 3 (ivy-index 801)) #("some" 0 4 (ivy-index 0)) "someday.org" "notes.org" #("~/.config/qtile" 0 15 (ivy-index 1)) #("~/.config/qtile/" 0 16 (ivy-index 1)) "projects.org" "projects.org" "projects.org" "projects.org" #("p" 0 1 (ivy-index 1)) "projects.org" "projects.org" "projects.org" #("~/.doom.d/+org.el" 0 17 (ivy-index 1)) #("~/.doom.d/init.el" 0 17 (ivy-index 2)) #("~/.doom.d/packages.el" 0 21 (ivy-index 4)) #("~/.doom.d/config.el" 0 19 (ivy-index 1)) "projects.org" "projects.org" "projects.org" #("s" 0 1 (ivy-index 3)) "references.org" #("tickler.org" 0 11 (ivy-index 0))))
(setq minibuffer-history '("4x5" "4/1AfDhmri-cmUxzc-dhz4bo0Z8vpyPGYiVrXTQHxONqaEQbSvjZz-CEW-Rp6g" "4/5gGuAquDbaejkwXiErtI-Igsb9qhbXkOsvrWoEs9jFDUr-uD4X_cIdI"))
(setq counsel-M-x-history '(#("new work" 0 8 (ivy-index 0)) "+workspace/new" #("new tab" 0 7 (ivy-index 1)) "tab-new-to" "tab-new" #("cache" 0 5 (ivy-index 8)) "projectile-invalidate-cache" #("refresh" 0 7 (ivy-index 1)) "treemacs-refresh" #("goo" 0 3 (ivy-index 2)) "sync-google-calendar" #("sy" 0 2 (ivy-index 0)) "sync-google-calendar" #("org-toggle-checkbox" 0 19 (ivy-index 0)) #("or" 0 2 (ivy-index 0)) #("org-toggle-" 0 11 (ivy-index 3)) #("evil-window-increase-width" 0 26 (ivy-index 0)) #("width" 0 5 (ivy-index 6)) #("sync-google-calendar" 0 20 (ivy-index 0)) #("go" 0 2 (ivy-index 0)) #("desc" 0 4 (ivy-index 1)) "describe-variable" #("today" 0 5 (ivy-index 2)) "org-agenda-goto-today" "calendar-goto-today" #("sync-go" 0 7 (ivy-index 0)) #("descri fun" 0 10 (ivy-index 0)) "describe-function" #("des" 0 3 (ivy-index 0)) "describe-variable" #("desc var" 0 8 (ivy-index 0)) "describe-variable" #("org toda" 0 8 (ivy-index 2)) "org-increment-shift-today-by-days" #("org sch" 0 7 (ivy-index 0)) "org-schedule" #("org-time-stamp" 0 14 (ivy-index 0)) #("org-time" 0 8 (ivy-index 1)) #("doom " 0 5 (ivy-index 2)) "doom/help" #("describe-sy" 0 11 (ivy-index 0)) "describe-symbol" #("de" 0 2 (ivy-index 0)) "describe-function" #("doom/help-search" 0 16 (ivy-index 0)) #("doom he" 0 7 (ivy-index 3)) #("describe-fu" 0 11 (ivy-index 0)) "describe-function" #("eval-last-sexp" 0 14 (ivy-index 0)) #("org-cap" 0 7 (ivy-index 0)) "org-capture" #("eval se" 0 7 (ivy-index 0)) #("org export lat" 0 14 (ivy-index 2)) "org-latex-export-to-latex" #("org-odt-export-to-odt" 0 21 (ivy-index 1)) #("org " 0 4 (ivy-index 14)) "org-copy" #("org export " 0 11 (ivy-index 10)) #("org pdf" 0 7 (ivy-index 1)) "org-beamer-export-to-pdf" #("org-latex-export-to-pdf" 0 23 (ivy-index 0)) #("org export" 0 10 (ivy-index 11)) "org-html-export-to-html" #("outline up" 0 10 (ivy-index 0)) "outline-up-heading" #("org back" 0 8 (ivy-index 13)) "org-backward-heading-same-level" #("org next" 0 8 (ivy-index 9)) "org-next-visible-heading" #("org next " 0 9 (ivy-index 0)) "org-next-item" "org-backward-element" #("org same" 0 8 (ivy-index 0)) "org-forward-heading-same-level" #("which " 0 6 (ivy-index 15)) "which-key-show-standard-help" #("doom re" 0 7 (ivy-index 1)) "doom/reload" #("org-insert-todo-heading" 0 23 (ivy-index 0)) #("insert tod" 0 10 (ivy-index 2)) #("date calend" 0 11 (ivy-index 2)) "org-date-from-calendar" #("org-gcal" 0 8 (ivy-index 2)) "org-gcal-fetch" #("org-gcal-sync" 0 13 (ivy-index 0)) #("org-gca" 0 7 (ivy-index 7)) "org-gcal-sync-tokens-clear"))
(setq evil-ex-search-history '("affirmation" "night" "affirmatio" "todo" "phone" "number" "thinking" "relations" "shopp" "del" "make-captu" "todo" "general" "org-today" "Vasarnap" "agenda" "refile" "GOO" "GOOG" "captu" "capture" "display-line" "line" "spell" "auto-save-mode" "which" "insert" "gcal"))
(setq file-name-history '(#("/home/gergeh/work/resume/" 0 25 (ivy-index 0)) #("/home/gergeh/.doom.d/+org.el" 0 28 (ivy-index 0)) #("/home/gergeh/work/notes/schedule.org" 0 36 (ivy-index 0)) #("/home/gergeh/work/notes/references.org" 0 38 (ivy-index 0)) #("/home/gergeh/work/notes/inbox.org" 0 33 (ivy-index 0)) #("/home/gergeh/work/notes/someday.org" 0 35 (ivy-index 0)) #("/home/gergeh/work/notes/projects_test.org" 0 41 (ivy-index 2)) #("+org.el" 0 7 (ivy-index 2)) #("config.el" 0 9 (ivy-index 0)) #("/home/gergeh/work/notes/schedule_test.org" 0 41 (ivy-index 1)) #("/home/gergeh/work/notes/projects.org" 0 36 (ivy-index 0)) #("/home/gergeh/.doom.d/config.el" 0 30 (ivy-index 0)) #("config.py" 0 9 (ivy-index 1)) #("controls.py" 0 11 (ivy-index 0)) #("/home/gergeh/.config/qtile/" 0 27 (ivy-index 0)) #("/home/gergeh/.config/qtile/autostart.sh" 0 39 (ivy-index 0)) #("/home/gergeh/.config/qtile/config.py" 0 36 (ivy-index 0)) #("/home/gergeh/.doom.d/init.el" 0 28 (ivy-index 0)) #("init.el" 0 7 (ivy-index 0)) #("+functions.el" 0 13 (ivy-index 9)) #("packages.el" 0 11 (ivy-index 4)) #("/home/gergeh/.doom.d/packages.el" 0 32 (ivy-index 13)) #("/home/gergeh/.doom.d/" 0 21 (ivy-index 0)) #("/home/gergeh/.doom.d/orggcaltest.org" 0 36 (ivy-index 0)) #("/home/gergeh/.doom.d/Untitled.ipynb" 0 35 (ivy-index 5))))
(setq evil-jumps-history '((7319 "/home/gergeh/work/notes/projects.org") (6968 "/home/gergeh/work/notes/projects.org") (8154 "/home/gergeh/work/notes/projects.org")))
(setq counsel-compile-history 'nil)
(setq kill-ring '("7. Review your day in the evening- Recall chronologically what went well and what didn’t
" ", " "Weeding" "
" "How to do it:
Cue → Routine →  Reward

-Cue: something that reminds you of doing the event
-Routine: doing the event
-Reward: something that you benefit from doing the event
" "et " "félelem" "félelmet" "**** Én elfogadom a félelmet és tudom hogy félelem nélkül nincs fejlődés
" "**** Ez arról szól, hogy feltétel nélküli szeretet jár. Feltétel nélkül. Akkor is, ha szar voltál ma, és tegnap is és egész héten. Értékes vagyok. Ráadásul kibaszottul, és egy fantasztikus ember. Akkor is ha épp depressziós vagy, akkor is, ha épp nagyon rosszat csináltál. Nagyon nagyon értékes, és megérdemelsz végtelen mennyiségű szeretetet, és azt, hogy bármikor jól érezd magad. Most is.
" "**** Journaling :ARCHIVE:
" "python " "The solution of vehicle type, vehicle color and vehicle make and
            model classification was outsourced initially. Engineered a deep neural network based
            predictor to replace it from the ground up which achieved 94\\% accuracy on the
            validation set." "Vehicle property classifier" "        \\resumeItem{Vehicle property classifier}
          {The solution of vehicle type, vehicle color and vehicle make and
" "1" "Machine Learning Engineer" "Asura Technologies" "    \\resumeSubheading
      {Asura Technologies}{Budapest, Hungary}
      {Machine Learning Engineer}{Nov. 2018 - Feb. 2020}
      \\resumeItemListStart
        \\resumeItem{Vehicle property classifier}
          {The solution of vehicle type, vehicle color and vehicle make and
            model classification was outsourced initially. Engineered a deep neural network based
            predictor to replace it from the ground up which achieved 94\\% accuracy on the
            validation set.}
        \\resumeItem{False negative detection}
          {Implemented a false negative detection system to improve the car detection
            of the company's flagship product. It reduced errors per day by 50\\% at specific camera locations.}
        \\resumeItem{Video annotator toolkit}{Developed a graphical user
          interface to annotate videos and break them up based on their
          content. With that, the number of samples in our dataset, which was
          used to realize a violence and anomaly predictor, has increased
        tenfold.}
      \\resumeItemListEnd
" "* del :del:
** discord
*** TODO think about changes
*** TODO Make test server
:PROPERTIES:
:CREATED:  [2021-01-12 Tue 12:59]
:END:

*** Discussion with the party
*** Roles on main server
**** Tag for everyone and reacting to something except for DK
*** Stucturing chats
**** One document
*** Entry role
*** Bots
** top level overview
** acqusition
*** DONE talk with edina about acqusition
also about
- time allocated for del
- messenger chat
- social media

** helyi szervetek
*** leo
*** martai balazs (beszel leoval)
*** pecsi arc
*** treszkai
** social media
*** facebook
**** TODO talk with eszter
**** TODO Talk with Adámy
:PROPERTIES:
:CREATED:  [2021-01-09 Sat 08:48]
:END:

*** youtube
**** ideas for formats
***** ismerd meg a deleseket
***** heti hírek
***** politikai mém review
***** mennyire ismerjük egymást
***** téma kibeszélés
***** néha konyhai videó
***** vlog kollabráció a tagok között akik külön channelt visznek
***** külön riport a nagyon politikusainkkal
***** politikusok top 10
*** TODO server restructure
** TODO write note on adámys meeting
** missing officers
*** TODO valentin csapatépítő?
scheduled: <2020-12-04 fri>
:properties:
:created:  [2020-12-03 thu 15:47]
:end:

** akciócsapat
** mentorprogram
:PROPERTIES:
:GOOGLE_CALENDAR_EVENT_ID: t4223oss6isn4ekmohjin71nhg
:END:
:properties:
:google_calendar_event_id: 8batht2ufi2vqnmphbk0onqhqk
:created:  [2020-12-12 sat 07:17]
:end:
<2020-12-12 sat 16:00-20:00>
first two-week has started

*** waiting new mentors
- urvari zsofi
- molnar adam
- Hódi Norbert

** communication to our members
scheduled: <2020-12-12 sat 15:23-16:57>
:properties:
:created:  [2020-12-12 sat 07:16]
:end:

*** weekly video
**** CANCELLED plan the video and record it
*** two weekly member gatherings
*** Intellectual programmes
**** TODO Ask Kincső if she wants to do one
:PROPERTIES:
:CREATED:  [2021-01-09 Sat 08:42]
:END:

*** Email
**** TODO Find out how to log into admin page
:PROPERTIES:
:CREATED:  [2021-01-09 Sat 08:43]
:END:

*** mentor programme
*** weekly talk meetings
scheduled: <2020-12-12 sat 12:00-14:00>
:properties:
:created:  [2020-12-12 sat 07:15]
:end:

**** TODO Talk with Valentin
:PROPERTIES:
:CREATED:  [2021-01-09 Sat 08:39]
:END:

**** TODO Ask people if they want to do this
*** presentations by party members
Currently it is on hold
- education - arató gergely
- economy - molnár csaba
- green and eurozone - rónai sándor
- parlament működése, honvédség - vadai
- külpolitika - ara-kovács attila
- fővárosi ügyek - gy németh zsóka
- kiss laci - önkormányzati dolgok
- politikai kommunikáció - virsing viki
- szövegírás - nagy dani

" "- 
" "45" "." "
" "
" "
" "2. Meditate- It’s a powerful tool that helps to control your whims and the ‘itch’ to do something unproductive or destructive 

" "2. Exercise- Mind and body are very closely linked together 
" "
" ". Zoom out and look at the world from a bigger perspective- Everyone is facing problems just like you are

2. View yourself as a 3rd person, like a video game character- Take charge and progress in the game

3. Exercise- Mind and body are very closely linked together 

4. Meditate- It’s a powerful tool that helps to control your whims and the ‘itch’ to do something unproductive or destructive 

5. Review your day in the evening- Recall chronologically what went well and what didn’t 

6. Journaling" "**** 
" "*" "
" "Journaling:
1)Weeding
Identify deep rooted problem and remove them. The objective is getting rid on the roots to deep constant problems.

-a, Define the problem objectively, and think about it objectively (how it is in reality)

-Think about it subjectively, think about the problem it’s causing

-b, Summarize it in a single sentence and write it on the top of the page

-c, Write about the problem, just write about it as you feel

-Soon or later you will find and rationalize the solution of the problem and you will find it on your very eyes written on that page

How to do it:
Cue → Routine →  Reward

-Cue: something that reminds you of doing the event
-Routine: doing the event
-Reward: something that you benefit from doing the event

2)Reflect
Reflect on the past (day, week,month)
You need a cue: for example brush your teeth

-Reminds you of congratulating yourself for the things you have done well in that period

-Pinpoints the things you could do better

-Makes you stay on track and understand if you are actually getting closer to your goals

3)Planning
Planning ahead for the future,for example every single evening or morning you plan tomorrow or the rest of the day

-The next day you wake up knowing exactly what you need to do

-Reduces thinking, increases actions

-Plan whole year ahead (printing whole year calendar), this way your effectiveness will increase drastically

it’s suggested that the cue for this routine is to reflect, but you could just set up a reminder on your phone, it’s up to you.


4)Note taking
Use your jurnal to take notes of the thing you are consuming

-Improves your attention

-Allows you to use that information everytime you need it

It’s suggested to make rules to yourself in order to not waste time being inefficient (for example watching instructional youtube videos without taking notes)

5)Questions
The quality of your life is determined by the quality of the questions that you ask yourself


-Asking yourself the right questions is fundamental to make the right decisions in the future



-By asking yourself questions you get knowledge from yourself instead of the outside (usually when we face a problem we search the solution outside ourselves EG: youtube, google)


-There is a huge amount of perfect answers deep down in our brain that need to be pulled out by asking yourself the right questions

it’s suggested to ask yourself what your life is gonna look life in 10 years time if you don’t change, if you are not happy with your answer then you need to ask yourself how you are going to change.

50 best questions to implement:
1. What would you do if you knew you couldn’t fail?
2. What is your dream life?
3. What advice would you give to someone in your situation?
4. What has been your biggest lesson in the last year?
5. How can you achieve your 5 year plan in 5 months?
6. If you had all the time and money in the world, what would you
do?
7. What’s your biggest problem? How can you solve it?
8. What change do you want to make?
9. What are you afraid of?
10. What three things are you most proud of?
11. What has been the biggest lesson you’ve learned in the past
week?
12. What has been the biggest lesson you’ve learned in the past
month?
1. What has been the biggest lesson you’ve learned in the past
year?
14. What do you believe that no one else does?
15. What makes you most excited?
16. What does your dream day look like?
17. What one thing could you stop doing that would completely
change your life?
18. What one thing could you start doing that would completely
change your life?
19. How do your close friends view you?
20. How do you want them to view you?
21. Who are you comparing yourself to?
22. If nothing changed, what would your life look like in 10
years?
23. Are you happy with how that life looks?
24. What characteristics do you wish you had?
25. How can you get those characteristics?
26. In under 100 words, what is your purpose?
27. What was your best investment last month?
28. Do you like, comment and subscribe on Andrew’s videos?
29. When do you feel most yourself?
30. When do you feel least yourself?
31. What makes you happy?
32. What are the 20% of tasks that give you 80% benefits?
33. Are you happy with your diet?
34. Are you happy with your fitness?
35. Are you happy with your relationship?
36. Are you happy with your job?
37. Are you happy with your finances?
38. Are you happy with your mental health?
39. How could you get paid to do what you love?
40. If you could only share one message with the world, what
would it be?
1. What is something you’d love to learn?
2. If you achieved all of your life goals, how would you feel?
3. Where could I add more fun to my life?
4. How can I surprise my partner/friend/family.
5. Where do I need some help?
6. Where is fear holding me back?
7. Who are my role models?
8. What are the five or less things that I must do before I
die?
49. What is stopping me from being completely satisfied with
what I already have?
50. What is the purpose of my life?
" "- Workout 20 min
- 10 physiotherapy
- 10 min strech
" "- Being glad for where I am 5 min
" "- Affirmations 5 min
" "home" "0" "3" "for work out" "fisio therapy" "87
" "
**" "
" "Better Shell experience" "Shell" "Better Vim experience" "vim folds" "el" "engineering" "Software " "sfe" "Long " "***** adam ritter - google switzerland
" "**** Contacts
" "Make social connections
*** Notes :ARCHIVE:
**** Contacts
***** adam ritter - google switzerland
**** Search, befriend and talk with people on LinkedIN
**** Refresh sites you use for this
" "LONG  " "*** 
" "Ideas"))
(setq mark-ring 'nil)
(setq global-mark-ring 'nil)
(setq search-ring '(#("É" 0 1 (isearch-regexp-function nil isearch-case-fold-search nil))))
(setq regexp-search-ring 'nil)
